name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # For better analysis relevancy

      - name: Cache SonarCloud Packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud Scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud Scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          $path = '.\.sonar\scanner'
          if (-Not (Test-Path -Path $path)) {
              New-Item -Path $path -ItemType Directory
          }
          dotnet tool update dotnet-sonarscanner --tool-path $path

      - name: Install Coverlet
        shell: powershell
        run: |
          dotnet tool install --global coverlet.console

      - name: Start SonarCloud Analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"GusTheProgrammer_MyJourneyToWork-DevOps" /o:"gus-shaal" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.xml" /d:sonar.verbose=true
      
      - name: Build Project
        shell: powershell
        run: |
          dotnet build --no-incremental

      - name: Run Unit and Acceptance Tests
        shell: powershell
        run: |
          dotnet test --no-build --logger:trx

      - name: Generate Coverage Report
        shell: powershell
        run: |
          coverlet .\MyJourneyToWorkTests\bin\Debug\net7.0\MyJourneyToWorkTests.dll --target "dotnet" --targetargs "test --no-build" -f opencover -o ".\MyJourneyToWorkTests\CodeCoverage\coverage.xml"

      - name: End SonarCloud Analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"